//LISTA 1

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
#define MAXSIZE 10


typedef struct Aluno {
    char nome[20];
    int matricula;
    float nota;
} Aluno;


typedef struct ListaAlunos {
    Aluno alunos[MAXSIZE];
    int numElem;
} ListaAlunos;


void preencheAluno(Aluno* ptrAluno, 
                   int matricula,
                   float nota,
                   char* nome){
    (*ptrAluno).matricula = matricula;
    (*ptrAluno).nota = nota;
    strcpy((*ptrAluno).nome, nome);
}

void inicializaLista(ListaAlunos* listaAlunos){
    listaAlunos->numElem = 0;
}

void exibeLista(ListaAlunos* listaAlunos){
    int index;
    printf("Exibindo lista...\n");
    for(index = 0; index < listaAlunos->numElem;index++){
        printf("Aluno %d\n", index);
        printf("Nome: %s\n", listaAlunos->alunos[index].nome);
        printf("Matricula: %d\n", listaAlunos->alunos[index].matricula);
        printf("Nota: %.1f\n", listaAlunos->alunos[index].nota);
    }
}

bool insereAlunoNaLista(ListaAlunos* listaAlunos, 
                        Aluno aluno,
                        int posicao){
    if((listaAlunos->numElem >= MAXSIZE) || 
       (posicao < 0) || 
       (posicao > MAXSIZE) ||
       (posicao > listaAlunos->numElem)){
        printf("Insercao em posicao invalida!!!\n");
        return false;
    }
    int index;
    for(index = listaAlunos->numElem; index > posicao;index--){
        listaAlunos->alunos[index] = listaAlunos->alunos[index-1];
    }
    listaAlunos->alunos[posicao] = aluno;
    listaAlunos->numElem++;
    return true;
}

bool excluiElementoDaLista(ListaAlunos* listaAlunos, int posicao){
    if((listaAlunos->numElem >= MAXSIZE) || 
       (posicao < 0) || 
       (posicao > MAXSIZE) ||
       (posicao > listaAlunos->numElem)){
        printf("Exclusao em posicao invalida!!!\n");
        return false;
    }
    int index;
    for(index = posicao; index < listaAlunos->numElem - 1;index++){
        listaAlunos->alunos[index] = listaAlunos->alunos[index+1];
    }
    listaAlunos->numElem--;
    return true;
}

Aluno* buscaAlunoPorNome(ListaAlunos* listaAlunos, char* nome) {
    for (int index = 0; index < listaAlunos->numElem; index++) {
        if (strcmp(listaAlunos->alunos[index].nome, nome) == 0) {
            return &listaAlunos->alunos[index];
        }
    }
    return NULL;
}


Aluno* buscaAlunoPorMatricula(ListaAlunos* listaAlunos, int matricula) {
    for (int index = 0; index < listaAlunos->numElem; index++) {
        if (listaAlunos->alunos[index].matricula == matricula) {
            return &listaAlunos->alunos[index];
        }
    }
    return NULL;
}


Aluno* retornaEnesimoAluno(ListaAlunos* listaAlunos, int n) {
    if (n >= 0 && n < listaAlunos->numElem) {
        return &listaAlunos->alunos[n];
    }
    return NULL;
}

int main(){

    ListaAlunos listaAlunos;
    inicializaLista(&listaAlunos);

    Aluno aluno0, aluno1, aluno2;
    preencheAluno(&aluno0, 15424242, 9.5, "Joao");
    preencheAluno(&aluno1, 10101011, 10, "Ana");
    preencheAluno(&aluno2, 22222222, 7, "Bia");

    insereAlunoNaLista(&listaAlunos, aluno0, 0);
    insereAlunoNaLista(&listaAlunos, aluno1, 0);
    insereAlunoNaLista(&listaAlunos, aluno2, 1);

    exibeLista(&listaAlunos);

    char nomeBuscado[] = "Ana";
    int matriculaBuscada = 15424242;
    
    Aluno* alunoPorNome = buscaAlunoPorNome(&listaAlunos, nomeBuscado);
    Aluno* alunoPorMatricula = buscaAlunoPorMatricula(&listaAlunos, matriculaBuscada);
    
    if (alunoPorNome) {
        printf("Aluno encontrado por nome: %s, Matricula: %d, Nota: %.1f\n",
               alunoPorNome->nome, alunoPorNome->matricula, alunoPorNome->nota);
    } else {
        printf("Aluno com nome %s não encontrado.\n", nomeBuscado);
    }
    
    if (alunoPorMatricula) {
        printf("Aluno encontrado por matrícula: %s, Matricula: %d, Nota: %.1f\n",
               alunoPorMatricula->nome, alunoPorMatricula->matricula, alunoPorMatricula->nota);
    } else {
        printf("Aluno com matrícula %d não encontrado.\n", matriculaBuscada);
    }
    
    int n = 1;
    Aluno* enesimoAluno = retornaEnesimoAluno(&listaAlunos, n);
    if (enesimoAluno) {
        printf("Enésimo aluno na lista (n=%d): Nome: %s, Matricula: %d, Nota: %.1f\n",
               n, enesimoAluno->nome, enesimoAluno->matricula, enesimoAluno->nota);
    } else {
        printf("Índice %d está fora do intervalo válido.\n", n);
    }

    return 0;
}
